/*
 * NB: All conductance density arguments must be supplied in pS/um^2 units;
 *     they will be subsequently converted to mho/cm^2 as expected in mod 
 *     files.
 * 
 **** Ih IS NOT DEFINED HERE BUT SEPARATELY IN init_Ih.hoc ****
 *
 * Nad, Nas, Kdrf, Kdrs, KA, CaL, CaT, AHP, M
 * 	Maximal conductance densities for these channels (suffix "d" indicates
 *      dendrite, "s" soma). Axonal compartments get same value as dendrites.
 *
*/

func set_gbars() {

  quitflag = 0
  if (name_declared("Nad")!=5) { printf("ERROR: no Nad!\n") quitflag=1 }
  if (name_declared("Nas")!=5) { printf("ERROR: no Nas!\n") quitflag=1 }
  if (name_declared("Kdrf")!=5) { printf("ERROR: no Kdrf!\n") quitflag=1 }
  if (name_declared("Kdrs")!=5) { printf("ERROR: no Kdrs!\n") quitflag=1 }
  if (name_declared("KA")!=5) { printf("ERROR: no KA!\n") quitflag=1 }
  if (name_declared("CaL")!=5) { printf("ERROR: no CaL!\n") quitflag=1 }
  if (name_declared("CaT")!=5) { printf("ERROR: no CaT!\n") quitflag=1 }
  if (name_declared("AHP")!=5) { printf("ERROR: no AHP!\n") quitflag=1 }
  if (name_declared("M")!=5) { printf("ERROR: no M!\n") quitflag=1 }

  if (quitflag) {
    return quitflag
  }

  // Convert from pS/um^2 given on command-line to mho/cm^2 expected by the model code.
  Nadp = Nad * 10^-4
  Nasp = Nas * 10^-4
  Kdrfp = Kdrf * 10^-4
  Kdrsp = Kdrs * 10^-4
  KAp = KA * 10^-4
  CaLp = CaL * 10^-4
  CaTp = CaT * 10^-4
  AHPp = AHP * 10^-4
  Mp = M * 10^-4

  if (VERBOSE && NOT_YET_DISPLAYED) { printf("*** I have Nad |%g| Nas |%g| Kdrf |%g| Kdrs |%g| KA |%g| CaL |%g| CaT |%g| AHP |%g| M |%g| ***\n", Nad, Nas, Kdrf, Kdrs, KA, CaL, CaT, AHP, M) }

  soma[0] distance() //sets soma[0](0) as origin

  forsec all {
  
    // Somatic compartments
    if (issection("soma.*")) {
      gbar_Ikdrf = Kdrfp
      gbar_Ikdrs = Kdrsp
      gbar_Ika = KAp
      gna_Nasoma = Nasp
      gbar_IM = Mp

      if (VERBOSE && NOT_YET_DISPLAYED) {
        printf("** %s :\n", secname())
        printf("\tgna_Nasoma = %g\n", gna_Nasoma)
        printf("\tgbar_Ikdrf = %g\n", gbar_Ikdrf)
        printf("\tgbar_Ikdrs = %g\n", gbar_Ikdrs)
        printf("\tgbar_Ika = %g\n", gbar_Ika)
        printf("\tgbar_IM = %g\n", gbar_IM)
      }
    }

    // Dendritic compartments
    if (issection("dend.*")) {
      gbar_Ikdrf = Kdrfp
      gbar_Ikdrs = Kdrsp
      gbar_Ika = KAp
      gna_Nadend = Nadp
      gcalbar_cal = CaLp
      gbar_cat = CaTp
      gkbar_kca = AHPp
      gbar_IM = Mp

      if (VERBOSE && NOT_YET_DISPLAYED) {
        printf("** %s :\n", secname())
        printf("\tgna_Nadend = %g\n", gna_Nadend)
        printf("\tgbar_Ikdrf = %g\n", gbar_Ikdrf)
        printf("\tgbar_Ikdrs = %g\n", gbar_Ikdrs)
        printf("\tgbar_Ika = %g\n", gbar_Ika)
        printf("\tgcalbar_cal = %g\n", gcalbar_cal)
        printf("\tgbar_cat = %g\n", gbar_cat)
        printf("\tgkbar_kca = %g\n", gkbar_kca)
        printf("\tgbar_IM = %g\n", gbar_IM)
      }
    }

    // Axonal compartments
    if (issection("axon.*")) {
      gbar_Ikdrfaxon = Kdrfp
      gbar_Ikdrsaxon = Kdrsp
      gna_Naaxon = Nadp

      if (VERBOSE && NOT_YET_DISPLAYED) {
        printf("** %s :\n", secname())
        printf("\tgna_Naaxon = %g\n", gna_Naaxon)
        printf("\tgbar_Ikdrfaxon = %g\n", gbar_Ikdrfaxon)
        printf("\tgbar_Ikdrsaxon = %g\n", gbar_Ikdrsaxon)
      }
    }

  }
  return 0 // success
}
